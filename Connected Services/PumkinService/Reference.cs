//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PumkinService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Send", ConfigurationName="PumkinService.SendSoap")]
    public interface SendSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="Send/SendSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PumkinService.SendSmsResponse> SendSmsAsync(PumkinService.SendSmsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Send/Credit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PumkinService.CreditResponse> CreditAsync(PumkinService.CreditRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Send/Delivery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PumkinService.DeliveryResponse> DeliveryAsync(PumkinService.DeliveryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Send/GetInbox", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<PumkinService.GetInboxResponse> GetInboxAsync(PumkinService.GetInboxRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendSms", WrapperNamespace="Send", IsWrapped=true)]
    public partial class SendSmsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=2)]
        public string from;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=3)]
        public string[] to;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=4)]
        public string text;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=5)]
        public bool flash;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=7)]
        public long[] recId;
        
        public SendSmsRequest()
        {
        }
        
        public SendSmsRequest(string username, string password, string from, string[] to, string text, bool flash, byte[] status, long[] recId)
        {
            this.username = username;
            this.password = password;
            this.from = from;
            this.to = to;
            this.text = text;
            this.flash = flash;
            this.status = status;
            this.recId = recId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendSmsResponse", WrapperNamespace="Send", IsWrapped=true)]
    public partial class SendSmsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=0)]
        public int SendSmsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=2)]
        public long[] recId;
        
        public SendSmsResponse()
        {
        }
        
        public SendSmsResponse(int SendSmsResult, byte[] status, long[] recId)
        {
            this.SendSmsResult = SendSmsResult;
            this.status = status;
            this.recId = recId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Credit", WrapperNamespace="Send", IsWrapped=true)]
    public partial class CreditRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=1)]
        public string password;
        
        public CreditRequest()
        {
        }
        
        public CreditRequest(string username, string password)
        {
            this.username = username;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreditResponse", WrapperNamespace="Send", IsWrapped=true)]
    public partial class CreditResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=0)]
        public double CreditResult;
        
        public CreditResponse()
        {
        }
        
        public CreditResponse(double CreditResult)
        {
            this.CreditResult = CreditResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Delivery", WrapperNamespace="Send", IsWrapped=true)]
    public partial class DeliveryRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=0)]
        public long recId;
        
        public DeliveryRequest()
        {
        }
        
        public DeliveryRequest(long recId)
        {
            this.recId = recId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeliveryResponse", WrapperNamespace="Send", IsWrapped=true)]
    public partial class DeliveryResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=0)]
        public int DeliveryResult;
        
        public DeliveryResponse()
        {
        }
        
        public DeliveryResponse(int DeliveryResult)
        {
            this.DeliveryResult = DeliveryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInbox", WrapperNamespace="Send", IsWrapped=true)]
    public partial class GetInboxRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=2)]
        public string to;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=3)]
        public int year;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=4)]
        public int month;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=5)]
        public int day;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=6)]
        public int hour;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=7)]
        public int minute;
        
        public GetInboxRequest()
        {
        }
        
        public GetInboxRequest(string username, string password, string to, int year, int month, int day, int hour, int minute)
        {
            this.username = username;
            this.password = password;
            this.to = to;
            this.year = year;
            this.month = month;
            this.day = day;
            this.hour = hour;
            this.minute = minute;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInboxResponse", WrapperNamespace="Send", IsWrapped=true)]
    public partial class GetInboxResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Send", Order=0)]
        public string[] GetInboxResult;
        
        public GetInboxResponse()
        {
        }
        
        public GetInboxResponse(string[] GetInboxResult)
        {
            this.GetInboxResult = GetInboxResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    public interface SendSoapChannel : PumkinService.SendSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    public partial class SendSoapClient : System.ServiceModel.ClientBase<PumkinService.SendSoap>, PumkinService.SendSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SendSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(SendSoapClient.GetBindingForEndpoint(endpointConfiguration), SendSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SendSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SendSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SendSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SendSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SendSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<PumkinService.SendSmsResponse> SendSmsAsync(PumkinService.SendSmsRequest request)
        {
            return base.Channel.SendSmsAsync(request);
        }
        
        public System.Threading.Tasks.Task<PumkinService.CreditResponse> CreditAsync(PumkinService.CreditRequest request)
        {
            return base.Channel.CreditAsync(request);
        }
        
        public System.Threading.Tasks.Task<PumkinService.DeliveryResponse> DeliveryAsync(PumkinService.DeliveryRequest request)
        {
            return base.Channel.DeliveryAsync(request);
        }
        
        public System.Threading.Tasks.Task<PumkinService.GetInboxResponse> GetInboxAsync(PumkinService.GetInboxRequest request)
        {
            return base.Channel.GetInboxAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SendSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.SendSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SendSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://sms.pumkin.ir/API/Send.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.SendSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://sms.pumkin.ir/API/Send.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            SendSoap,
            
            SendSoap12,
        }
    }
}
